<model-themer>
    
    <h2>{ ((recalls ('course') || {}) .course || {}) .name }<h3 if={ ((recalls ('course') || {}) .course || {}) .published }>(published)</h3></h2>
    <p>{ ((recalls ('course') || {}) .course || {}) .description }</p>
    
    <table>
        <tr><th>Modules</th></tr>
		<tr each={ assemble (((recalls ('course') || {}) .course || {}) .module_set) }
		    ><td><a href="#service/instructor/module/#{ recalls ('course_id') }/{ order }">{ name }</a></td
		    ><td><button to="delete" order={ order }>x</button></td
		    ><td><button to="shift" order={ order }>shift</button></td
		></tr>
    </table>
    
    <button type="submit" name="add_module">
        Add module
    </button>
    <button type="submit" name="publish_course" if={ ! ((recalls ('course') || {}) .course || {}) .published }>
        Publish course!
    </button>
</model-themer>

<script>
(function (self) {
    self .on ('mount', function () {
        var add_module = self .root .querySelector ('button[name="add_module"]');
        
        add_module .addEventListener ('click', function () {
            window .location .hash = '#service/instructor/module/add/#' + self .recalls ('course_id')
        });
    });
    self .on ('updated', function () {
        [] .forEach .call (self .root .querySelectorAll ('button[to="delete"]'), function (delete_module) {
            delete_module .addEventListener ('click', function () {
                var order = delete_module .getAttribute ('order');
                self .stuff .trigger ('delete', {
                    module_order: +order
                });
            }, false);
        });
        [] .forEach .call (self .root .querySelectorAll ('button[to="shift"]'), function (shift_module) {
            shift_module .addEventListener ('click', function () {
                var order = shift_module .getAttribute ('order');
                self .stuff .trigger ('reorder', {
                    module_1_order: +order,
                    module_2_order: (+order + 1) % assemble (((self .recalls ('course') || {}) .course || {}) .module_set) .length
                });
            }, false);
        });
        
        var publish_course = self .root .querySelector ('button[name="publish_course"]');
        
        publish_course && publish_course .addEventListener ('click', function () {
            self .stuff .trigger ('publish', {
                course_id: self .recalls ('course_id')
            });
        }, false);
    });
    
    self .stuff .on ('course', function () {
        self .update ();
    });
    self .stuff .on ('course_id', function () {
        self .update ();
    });
    
})(this);
</script>
