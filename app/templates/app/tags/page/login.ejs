<layout-primary>
	
	<section class="hero is-fullheight">
		<div class="hero-body">
			<div class="container has-text-centered">
				
				<h1 class="title is-1">Log in.</h1>
				
				<component-loginner username__from="username" password__from="password" />
				
				<section class="section"></section>
				
				<button class="button is-large is-info" type="submit" ref="login" >
					Login
				</button>
				<button class="button is-large" type="submit" ref="register" >
					Register
				</button>
			</div>
		</div>
	</section>
</layout-primary>

<script>
	(function (self) {
		if (get_cache (backend_path + '/login') && ! get_cache (backend_path + '/login') .error) {
			window .location .hash = '#service'
		}
		check_out (backend_path + '/cats', { method: 'GET' }, ' { response } ');
		
		//View
		self .records ({
			username: undefined,
			password: undefined
		});
		
		//View to Api
		self .processes ({
			login: ref,
			register: ref
		}) .on ('login',  function (ref) {
			ref .consume (function (response) {
					if (response && ! response .error) {
						window .location .hash = '#service'
					}
				},
				most .fromEvent ('click', ref)
					.map (function () {
						return	{
									username: self .my ('username'),
									password: self .my ('password')
								}
					})
					.thru (util .ref)
					.tap (display_errors)
			);
		}) .on ('register',  function (register) {
			ref .consume (function (response) {
					if (response && ! response .error) {
						alert ('Successfully registered!');
					}
				},
				most .fromEvent ('click', ref)
					.map (function () {
						return	{
									username: self .my ('username'),
									password: self .my ('password')
								}
					})
					.thru (util .ref)
					.tap (display_errors)
			);
		});
	})(this);
</script>

