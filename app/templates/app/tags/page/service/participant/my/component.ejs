<layout-default>
    
	<div id="wrap">
		<div id="content">
			<h2>Components</h2>
			    <h2 if={ ((assemble (((assemble (((recalls ('course') || {}) .course || {}) .module_set) || {}) [recalls ('module_order')] || {}) .component_set) || {}) [recalls ('component_order')] || {}) .done } ><strike>{ ((assemble (((assemble (((recalls ('course') || {}) .course || {}) .module_set) || {}) [recalls ('module_order')] || {}) .component_set) || {}) [recalls ('component_order')] || {}) .name }</strike></h2>
                <h2 if={ ! ((assemble (((assemble (((recalls ('course') || {}) .course || {}) .module_set) || {}) [recalls ('module_order')] || {}) .component_set) || {}) [recalls ('component_order')] || {}) .done } >{ ((assemble (((assemble (((recalls ('course') || {}) .course || {}) .module_set) || {}) [recalls ('module_order')] || {}) .component_set) || {}) [recalls ('component_order')] || {}) .name }</h2>
                <p>{ ((assemble (((assemble (((recalls ('course') || {}) .course || {}) .module_set) || {}) [recalls ('module_order')] || {}) .component_set) || {}) [recalls ('component_order')] || {}) .content }</p>
                
                <button disabled if={ ((assemble (((assemble (((recalls ('course') || {}) .course || {}) .module_set) || {}) [recalls ('module_order')] || {}) .component_set) || {}) [recalls ('component_order')] || {}) .done } >
                    Already done
                </button>
                <button type="submit" name="done_component" if={ ! ((assemble (((assemble (((recalls ('course') || {}) .course || {}) .module_set) || {}) [recalls ('module_order')] || {}) .component_set) || {}) [recalls ('component_order')] || {}) .done } >
                    I am done
                </button>    
			
		</div>
		<div style="clear: both;"> </div>
	</div>
    
</layout-default>

<script>
(function (self) {
    self .on ('mount', function () {
        var done_component = self .root .querySelector ('button[name="done_component"]');
        
        done_component && done_component .addEventListener ('click', function () {
            self .stuff .trigger ('done');
        }, false);
    });
    self .on ('updated', function () {
        var done_component = self .root .querySelector ('button[name="done_component"]');
        
        done_component && done_component .addEventListener ('click', function () {
            self .stuff .trigger ('done');
        }, false);
    });
    
    self .stuff .on ('course', function () {
        self .update ();
    });
    self .stuff .on ('course_id', function () {
        self .update ();
    });
    self .stuff .on ('module_order', function () {
        self .update ();
    });
    self .stuff .on ('component_order', function () {
        self .update ();
    });

    var leak = undefined;
    
    self .understands ('input');
    self .stuff .on ('input', function (course_id, module_order, component_order) {
        content .course (course_id) (self);
        leak = setInterval (self .recalls .bind (self, 'course'), 300);
        util .component_done (course_id, module_order, component_order) (self);
        
	    display_errors ('course', self);
	    display_errors ('done', self);
	    
        remembers ({
            course_id: course_id,
            module_order: module_order,
            component_order: component_order
        }) (self);
    });
    
    self .on ('unmount', function () {
        leak && clearInterval (leak);
    });
})(this);
</script>

