<layout-default>
	
	<div id="wrap">
		<div id="content">
			<h2>Components</h2>
				<h2 if={
							value (my ('component_order'), '.done' ) (
								assemble (
									value (my ('module_order'), '.component_set') (
										assemble (my ('course', '.course .module_set'))
									)
								)
							)
					} ><strike>{ 
							value (my ('component_order'), '.name' ) (
								assemble (
									value (my ('module_order'), '.component_set') (
										assemble (my ('course', '.course .module_set'))
									)
								)
							)
					}</strike
				></h2>
				<h2 if={
							! value (my ('component_order'), '.done' ) (
								assemble (
									value (my ('module_order'), '.component_set') (
										assemble (my ('course', '.course .module_set'))
									)
								)
							)
					 } >{
					 		
							value (my ('component_order'), '.name' ) (
								assemble (
									value (my ('module_order'), '.component_set') (
										assemble (my ('course', '.course .module_set'))
									)
								)
							)
				}</h2>
				<p>{
							value (my ('component_order'), '.content' ) (
								assemble (
									value (my ('module_order'), '.component_set') (
										assemble (my ('course', '.course .module_set'))
									)
								)
							)
				}</p>
				
				<button disabled if={
										value (my ('component_order'), '.done' ) (
											assemble (
												value (my ('module_order'), '.component_set') (
													assemble (my ('course', '.course .module_set'))
												)
											)
										)
					} >
					Already done
				</button>
				<button type="submit" if={
																	! value (my ('component_order'), '.done' ) (
																		assemble (
																			value (my ('module_order'), '.component_set') (
																				assemble (my ('course', '.course .module_set'))
																			)
																		)
																	)
					} <%- ref ('done_component') %> >
					I am done
				</button>    
			
		</div>
		<div style="clear: both;"> </div>
	</div>
	
</layout-default>

<script>
(function (self) {		
	remembers ({
		course: undefined,
		module_order: undefined,
		component_order: undefined
	}) (self);


	connects ({
		done_component:	each_ref ('done_component')
	}) (self);




	remembers ({
		input:	function (args) {
					var course_id = args [0];
					var module_order = args [1];
					var component_order = args [2];
					
					
					most .periodic (500)
						.thru (content .course (course_id))
						.tap (display_errors)
						.observe (function (course) {
							self .emit ('course', course)
						});
					remembers ({
						module_order: module_order,
						component_order: component_order
					}) (self);
					
							
					most .mergeArray ([
						most .fromEvent ('course', self),
						most .fromEvent ('module_order', self),
						most .fromEvent ('component_order', self)
					])
					.tap (display_errors)
					.observe (function () {
						self .update ();
					});
					
					
					self .on ('done_component',	function (done_component) {
						most .fromEvent ('click', done_component)
							.thru (util .component_done (course_id, module_order, component_order))
							.observe (display_errors);
					});
				}
	}) (self);
})(this);
</script>

